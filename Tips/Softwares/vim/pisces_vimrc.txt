" ******************************************************************************
" ========================  Settings for Vundle ================================
" ******************************************************************************
set nocompatible              " be iMproved, required
filetype off                  " required
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'


" ******** Installed Later inside Vundle environment
" ***************************************************
" Ref: https://github.com/joelhooks/dotfiles/blob/master/.vim/vimrc
" Ref: https://realpython.com/blog/python/vim-and-python-a-match-made-in-heaven/

" most recently used files
Plugin 'yegappan/mru'


" Use markdown with tabular

" Run script inside vim
Plugin 'thinca/vim-quickrun'

" Multiple cursor support
Plugin 'terryma/vim-multiple-cursors'

" Surround string by quotes etc.
Plugin 'tpope/vim-surround.git'


" very nice file browser
Plugin 'scrooloose/nerdtree'
let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree



" some markdown support
Plugin 'godlygeek/tabular'        " The tabular plugin must come before vim-markdown.
Plugin 'https://github.com/plasticboy/vim-markdown.git'



" git tools
Plugin 'tpope/vim-fugitive'

" zen coding (for HTML)
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}

" jump around documents
Plugin 'Lokaltog/vim-easymotion'

" prereq for FuzzyFinder
Plugin 'L9'
Plugin 'FuzzyFinder'

" Code folding
Plugin 'tmhedberg/SimpylFold'


" path searching
Plugin 'kien/ctrlp.vim'
Plugin 'bronson/vim-visual-star-search'
Plugin 'git://git.wincent.com/command-t.git'



" some autocompletion
Plugin 'SirVer/ultisnips'



" pretty sweet linting/error checking. Works on save
Plugin 'https://github.com/scrooloose/syntastic.git'

" Colors 
Plugin 'altercation/vim-colors-solarized'


" creates a nice way to traverse buffers in a 'tab like' way.
" Plugin 'fholgado/minibufexpl.vim'

" key combos for 'pairs' of things. Mostly previous/next type stuff
Plugin 'tpope/vim-unimpaired'
Plugin 'wojtekmach/vim-rename'



" Powerline
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}





" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
"
"
" ******************************************************************************
" ====================== My Custom Settings ====================================
" ******************************************************************************
"
"
" display settings
set number              " Show line numbers
set ruler               " Show file stats
set showcmd             " show command in bottom bar
set showmode            " show mode
set showmatch           " highlight matching brackets

" edit settings
set tabstop=4           " number of visual spaces per TAB
set wildmenu            " visual autocomplete for command menu
set foldenable          " enable folding
set foldlevelstart=10   " open most folds by default
set foldnestmax=10      " 10 nested fold max
set foldmethod=indent   " fold based on indent
set textwidth=80        " wrap lines automatically at 80th column
set encoding=utf-8      " Encoding
set confirm             " ask to save unchaged file
set mouse=a             " Enable use of the mouse for all modes
set complete=.,w,b,u,U,t,i,d  " do lots of scanning on tab completion

"------ Indents and tabs ------"
set autoindent       " set the cursor at same indent as line above
set smartindent      " try to be smart about indenting (C-style)
set expandtab        " expand <Tab>s with spaces; death to tabs!
set shiftwidth=4     " spaces for each step of (auto)indent
set softtabstop=4    " set virtual tab stop (compat for 8-wide tabs)
set tabstop=4        " for proper display of files with tabs
set shiftround       " always round indents to multiple of shiftwidth
set copyindent       " use existing indents for new indents
set preserveindent   " save as much indent structure as possible
set cursorline       "show a visual line under the cursor's current line

" backup settings
try

    set backup                    "set backup
    set backupdir=~/.vim/backup   "needs ~/.vim/backup
    set directory=~/.vim/tmp      "needs ~/.vim/tmp
catch
endtry

" syntax highlighting
"colorscheme solarized  " needs ~/.vim/colors/solarized.vim
"set background=dark    " dark background for console
syntax enable           " enable syntax highlighting
let python_highlight_all = 1



try
    color Tomorrow-Night
catch
endtry

" search settings
set hlsearch           " highlight search results
set ignorecase         " do case insensitive search...
set incsearch          " do incremental search
set smartcase          " ...unless capital letters are used
:noh                   "turn off highlighting until next

" Turn off annoying error bells:
set noerrorbells
set visualbell
set t_vb=


" new keymaps
" press F5 to sort selection or paragraph
vnoremap <F5> :sort i<CR>
nnoremap <F5> Vip:sort i<CR>

" press F8 to turn the search results highlight off
noremap <F8> :nohl<CR>
inoremap <F8> <Esc>:nohl<CR>a

" press F12 to toggle showing the non-printable charactes
noremap <F12> :set list!<CR>
inoremap <F12> <Esc>:set list!<CR>a

"backspace was not working in insert mode
set nocompatible
set backspace=2
"
"
"
"
" ******************************************************************************
" ===================== Plugins Installed Later ================================
" ******************************************************************************
" To Install Plugins Using Vundle:
" 1. Go to vim
" 2. :so ~/.vimrc
" 3. :PluginInstall 
"
"
"
"
Plugin 'wakatime/vim-wakatime'

" ##=======================================================================
" ## Settings adapted from joelhooks
" # https://github.com/joelhooks/dotfiles/blob/master/.vim/vimrc
" ##=======================================================================
" Save and run current file
map <silent> <F5> <esc>:w<CR><esc>:!./%<CR>


" Reload changes to .vimrc automatically
autocmd BufWritePost  ~/.vimrc source ~/.vimrc

" Stuff taken from
" https://github.com/r00k/dotfiles/blob/master/vimrc
command! Q q
command! W w


let g:ctrlp_map = '<c-p>'
nmap <silent> <C-D> :NERDTreeToggle<CR>
set wildmode=list:longest
set wildmenu                "enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~ "stuff to ignore when tab completing
set wildignore+=*vim/backups*
set wildignore+=*sass-cache*
set wildignore+=*DS_Store*
set wildignore+=vendor/rails/**
set wildignore+=vendor/cache/**
set wildignore+=*.gem
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif
set wildignore+=*node_modules*




" Automatically re-indent on paste
" http://www.reddit.com/r/vim/comments/pkwkm/awesome_little_tweak_automatically_reindent_on/
nnoremap <leader>p p
nnoremap <leader>P P
nnoremap p p'[v']=
nnoremap P P'[v']=


"##=======================================================================
"## For Ultisnips
"##=======================================================================
set rtp+=~/.vim
let g:UltiSnipsExpandTrigger="<tab>"               " expandtrigger
let g:UltiSnipsJumpForwardTrigger="<tab>"          " advance to next tabstop
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"       " reverse to previous tabstop



"##=======================================================================
"## Split navigation
" Ref: https://realpython.com/blog/python/vim-and-python-a-match-made-in-heaven/
"##=======================================================================

"split navigations
nnoremap <C-J> <C-W><C-J> " Ctrl-j move to the split below
nnoremap <C-K> <C-W><C-K> " Ctrl-k move to the split above
nnoremap <C-L> <C-W><C-L> " Ctrl-l move to the split to the right
nnoremap <C-H> <C-W><C-H> " Ctrl-h move to the split to the left




